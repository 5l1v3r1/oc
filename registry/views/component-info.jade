extends layout

mixin showArray(title, arr)
  +property(title, !!arr && arr.length > 0 ? arr.join(', ') : 'none')

mixin author(a)
  div.field
    p Author:
    if !a.name && !a.email && !a.url
      span not available

    if !!a.name
      span #{a.name}&nbsp;

    if !!a.email
      span
        a(href='mailto:' + a.email) #{a.email}
        | &nbsp;

    if !!a.url
      span
        a(href=a.url, target="_blank")=a.url
  
block content
  a.back(href=href) &lt;&lt; All components
  h2
    | #{component.name} &nbsp;
    select#versions
      each version in component.allVersions
        option(value=version, selected=(version === component.version ? "selected" : false))=version
  p.w-100
    | #{component.description}
    if component.oc.state
      span.details-state
        span(class='component-state-' + component.oc.state.toLowerCase())= component.oc.state

  h3 Component Info
  +property('Repository', component.getRepositoryUrl() || 'not available', !!component.getRepositoryUrl())
  +author(parsedAuthor)
  +property('Publish date', new Date(component.oc.date) || 'not available')
  +property('Publish agent', ('OC CLI ' + component.oc.version) || 'not available')
  +showArray('Node.js dependencies', dependencies)
  +showArray('Plugin dependencies', component.oc.plugins)

  h3 Parameters
  if !component.oc.parameters
    p.w-100 none
  else

    #plugins.table
      .row.header
        .t-25 Parameters 
        .t.75
      each p, pName in component.oc.parameters
        .row
          .t-25
            span.bold=pName
            span (#{p.type}, #{p.mandatory ? 'mandatory' : 'optional'})
          .t-75
            if p.description
              span=p.description
              br
              br
            span.bold Example:
            span=p.example

  h3 Code
  p 
    | You can edit the following area and then 
    a.refresh-preview(href="#refresh") refresh 
    | to apply the change into the preview window.
  #editor
    | &lt;oc-component href=&quot;#{href + component.name + '/' + component.version + '/' + sandBoxDefaultQs}&quot;&gt;&lt;/oc-component&gt;

  h3
    | Preview 
    a.refresh-preview(href="#refresh") (Refresh)
  iframe.preview(src='~preview/' + sandBoxDefaultQs)

block scripts
  script(src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/ace.min.js")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/mode-html.js")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/ace/1.2.0/theme-github.js")
  script.
    var editor;
    if(!!window.ace){
      editor = ace.edit('editor');
      editor.container.style.opacity = '';
      editor.session.setMode('ace/mode/html');
      editor.setAutoScrollEditorIntoView(true);
      editor.setOption('maxLines', 40);
      editor.setTheme('ace/theme/github');
    }

    var oc = oc || {};
    oc.cmd = oc.cmd || [];

    oc.cmd.push(function(){
      $('#versions').change(function(){
        window.location = '#{href + component.name}/' + $(this).val() + '/~info';
      });

      $('.refresh-preview').click(function(){
        if(!!editor){
          var code = editor.getValue(),
              splitted = $(code).attr('href').split('?'),
              url = splitted[0];

          if(url.slice(-1) !== '/'){
            url += '/';
          }

          url = url.replace('http\:\/\/', '\/\/').replace('https\:\/\/', '\/\/') + '~preview';

          if(splitted.length > 1){
            url += '/?' + splitted[1];
          }

          $('.preview').attr('src', url);
        }

        return false;
      });
    });